// 1. Створіть тип даних Учасник та кілька його реалізацій: Людина, Кіт, Робот.  
// 2. Класи з п.2 повинні мати поведінку бігати і стрибати (методи просто виводять інформацію про дію в консоль). 
// 3. Створіть тип даних Перешкода та кілька її реалізацій: Бігова Доріжка та Стіна.  
// 4. Класи з п.3 повинні мати поведінку подолати перешкоду.  
// 5. Налагодити взаємодію між Учасником та Перешкодою.   
// Іншими словами, учасники під час проходження через перешкоди мають виконувати відповідні дії (бігти чи стрибати). 
//  Наприклад: Людина пробігла бігову доріжку.  
// 6. Створіть два масиви: з учасниками та перешкодами.   
 
// 7. Кожен елемент з масиву з учасниками повинен пройти кожну перешкоду з масиву з перешкодами.  
//  8. * У перешкод є довжина (для доріжки) або висота (для стіни), а учасників обмеження на біг та стрибки.   
// Якщо учасник не зміг пройти одну з перешкод, то наступного він не приступає (цілком вибуває з участі в серії перешкод).    
// 9. * Результат виконання учасником конкретної перешкоди виводити у консоль. Наприклад: "Учасник[ІМ'Я] пройшов перешкоду[НАЗВА] на дистанції[ЗНАЧЕННЯ]"
 
// "Учасник[ІМ'Я] не пройшов перешкоду[НАЗВА] на дистанції[ЗНАЧЕННЯ]. Пройдено[ЗНАЧЕНИЕ]"

var Cat = require('./Cat');
var Human = require('./Human');
var Obstacle = require('./Obstacles');

// Массив участников
var participants = [
    new Cat(),
    new Human()
];

// Массив препятствий (с длинами для беговых дорожек и высотами для стен)
var obstacles = [
    new Obstacle('treadmill', 150),  // Беговая дорожка длиной 150 метров
    new Obstacle('wall', 1),         // Стена высотой 1 метр
    new Obstacle('treadmill', 500),  // Беговая дорожка длиной 500 метров
    new Obstacle('wall', 2)          // Стена высотой 2 метра
];

// Каждый участник проходит каждое препятствие
for (let participant of participants) {
    console.log(`\n${participant.getType()} is starting challenge`);

    for (let obstacle of obstacles) {
        // Устанавливаем действие участника в зависимости от типа препятствия
        if (obstacle.type === 'treadmill') {
            participant.setAction('running');
        } else if (obstacle.type === 'wall') {
            participant.setAction('jumping');
        }

        // Теперь пытаемся преодолеть препятствие
        let success = obstacle.overcome(participant);
        if (!success) {
            console.log(`Участник ${participant.getType()} is left from challenge`);
            break;  // Участник выбывает после первой неудачи
        }
    }
}








